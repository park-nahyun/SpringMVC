SELECT USER
FROM DUAL;

CREATE TABLE TBL_STUDENT
( SID   NUMBER
, NAME  VARCHAR2(30)
, TEL   VARCHAR2(40)
, CONSTRAINT STUDENT_SID_PK PRIMARY KEY(SID)
);
--> Table TBL_STUDENT이(가) 생성되었습니다.


CREATE SEQUENCE STUDENTSEQ
NOCACHE;
--> Sequence STUDENTSEQ이(가) 생성되었습니다.

INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(1, '선혜연', '010-2222-2222');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(2, '아이유', '010-2222-2222');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(3, '엔시티', '010-3333-3333');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(4, '박효신', '010-4444-4444');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(5, '지드래공', '010-5555-5555');
-->1 행 이(가) 삽입되었습니다.


SELECT SID, NAME ,TEL
FROM TBL_STUDENT;
/*
1   선혜연	010-1111-1111
2	아이유	010-2222-2222
*/

DROP TABLE TBL_GRADE;


CREATE TABLE TBL_GRADE
( SID   NUMBER
, SUB1  NUMBER(3)
, SUB2  NUMBER(3)
, SUB3  NUMBER(3)
, CONSTRAINT GRADE_SID_PK PRIMARY KEY(SID)
, CONSTRAINT GRADE_SID_FK FOREIGN KEY(SID)
             REFERENCES TBL_STUDENT(SID)
, CONSTRAINT GRADE_SUB1_CK CHECK(SUB1 BETWEEN 0 AND 100)
, CONSTRAINT GRADE_SUB2_CK CHECK(SUB2 BETWEEN 0 AND 100)
, CONSTRAINT GRADE_SUB3_CK CHECK(SUB3 BETWEEN 0 AND 100)
);
-->Table TBL_GRADE이(가) 생성되었습니다.


CREATE SEQUENCE GRADESEQ
NOCACHE;
--> Sequence GRADESEQ이(가) 생성되었습니다.


INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(1, 90, 80, 70);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(2, 80, 70, 50);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(3, 40, 70, 50);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(4, 30, 40, 50);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(5, 90, 90, 30);



CREATE OR REPLACE VIEW STUDENTVIEW
AS
SELECT SID, NAME, TEL
        , (SELECT COUNT(*)
           FROM TBL_GRADE
           WHERE SID = S.SID) AS SUB
FROM TBL_STUDENT S
ORDER BY SID;
--> View STUDENTVIEW이(가) 생성되었습니다.

/*
CREATE OR REPLACE VIEW GRADEVIEW
AS
SELECT G.SID AS SID
     , (SELECT NAME 
        FROM TBL_STUDENT
        WHERE SID = G.SID) AS NAME
     , G.SUB1 AS SUB1
     , G.SUB2 AS SUB2
     , G.SUB3 AS SUB3
     , (G.SUB1 + G.SUB2 + G.SUB3) AS TOT
     , ROUND(G.SUB1 + G.SUB2 + G.SUB3)/3 AS AVG
     , CASE WHEN  ROUND(G.SUB1 + G.SUB2 + G.SUB3)/3 >= 80 THEN '합격'
            WHEN  ROUND(G.SUB1 + G.SUB2 + G.SUB3)/3 >= 60 THEN '과락'
            ELSE '불합격'
        END CH
FROM TBL_GRADE G
ORDER BY G.SID;
*/

CREATE OR REPLACE VIEW GRADEVIEW
AS
SELECT S.SID AS SID
     , S.NAME AS NAME
     , G.SUB1 AS SUB1
     , G.SUB2 AS SUB2
     , G.SUB3 AS SUB3
     , (G.SUB1 + G.SUB2 + G.SUB3) AS TOT
     , ROUND((G.SUB1 + G.SUB2 + G.SUB3)/3) AS AVG
     , (CASE WHEN (G.SUB1 + G.SUB2 + G.SUB3)/3 < 60 THEN '불합격'
             WHEN (G.SUB1 <= 40) OR (G.SUB2 <= 40) OR (G.SUB3 <= 40) THEN '과락'
             ELSE '합격'
             END) AS CH
FROM TBL_STUDENT S LEFT JOIN TBL_GRADE G
ON S.SID = G.SID;


DROP VIEW STUDENTVIEW;
DROP VIEW GRADEVIEW;

SELECT *
FROM STUDENTVIEW;

SELECT *
FROM GRADEVIEW;


COMMIT;

SELECT COUNT(*) AS COUNT
FROM TBL_STUDENT;

DELETE
FROM TBL_STUDENT
WHERE SID=2;