SELECT USER
FROM DUAL;
--==>> SCOTT

DROP TABLE TBL_GRADE;
DROP TABLE TBL_STUDENT;

--○ 실습 테이블 생성
CREATE TABLE TBL_STUDENT
( SID   NUMBER
, NAME  VARCHAR2(30)
, TEL   VARCHAR2(40)
, CONSTRAINT STUDENT_SID_PK PRIMARY KEY(SID)
);


CREATE TABLE TBL_GRADE
( SID   NUMBER
, SUB1  NUMBER(3)
, SUB2  NUMBER(3)
, SUB3  NUMBER(3)
, CONSTRAINT GRADE_SID_PK PRIMARY KEY(SID)
, CONSTRAINT GRADE_SID_FK FOREIGN KEY(SID)
  REFERENCES TBL_STUDENT(SID)
);

--○ 실습 대상 시퀀스 구성
CREATE SEQUENCE STUDENTLISTSEQ
NOCACHE;


--○ 샘플 데이터 입력
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(STUDENTLISTSEQ.NEXTVAL, '박나봉', '010-1111-1111');

INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(STUDENTLISTSEQ.NEXTVAL, '김아별', '010-2222-2222');

INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(STUDENTLISTSEQ.NEXTVAL, '김서현', '010-3333-3333');

INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(STUDENTLISTSEQ.NEXTVAL, '정주희', '010-4444-4444');


INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(1, 100, 100, 100);

INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(2, 90, 80, 70);

INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(3, 70, 60, 50);

INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(4, 90, 50, 30);




--○ 뷰 생성
DROP VIEW STUDENTVIEW;
DROP VIEW GRADEVIEW;


CREATE OR REPLACE VIEW STUDENTVIEW
AS
SELECT S.SID AS SID, S.NAME AS NAME, S.TEL AS TEL   
     , (SELECT COUNT(*)
        FROM TBL_GRADE
        WHERE SID = S.SID) AS SUB
FROM TBL_STUDENT S;
--==>> View STUDENTVIEW이(가) 생성되었습니다.

CREATE OR REPLACE VIEW GRADEVIEW
AS
SELECT G.SID AS SID
    , (SELECT NAME FROM TBL_STUDENT WHERE SID=G.SID) AS NAME
    , G.SUB1 AS SUB1, G.SUB2 AS SUB2, G.SUB3 AS SUB3
    , (G.SUB1+G.SUB2+G.SUB3) AS TOT
    , ROUND((G.SUB1+G.SUB2+G.SUB3)/3.0, 2) AS AVG
    , CASE WHEN ( (G.SUB1+G.SUB2+G.SUB3)/3.0 < 60 ) THEN '불합격'
           WHEN ( G.SUB1<40 OR G.SUB2<40 OR G.SUB3<40 ) THEN '과락'
           ELSE '합격'
       END AS CH
FROM TBL_GRADE G;    
    

SELECT SID, NAME, TEL, SUB
FROM STUDENTVIEW;
    
SELECT SID, NAME, SUB1, SUB2, SUB3, TOT, AVG, CH
FROM GRADEVIEW;


--○ 커밋
COMMIT;
--==>> 커밋 완료

SELECT COUNT(*) AS COUNT
FROM TBL_STUDENT;


SELECT COUNT(*) AS COUNT
FROM TBL_GRADE;



-- DB 설계시
/*
graderesult
1 합격
2 불합격
3 과락

이런식으로 테이블 따로 만들지 말 것..
컬럼도 따로 만들지 말 것.
쿼리를 이용해 얻어낼 수 있는 것은 따로 만들지 말 것
*/